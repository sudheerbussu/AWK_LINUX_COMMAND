
AWK command in Linux/Unix


AWK command in Linux/Unix


AWK is suitable for pattern search and processing. The script runs to search one or more files to identify matching patterns ,if pattern matches perform specific tasks.


What Operations can AWK do?
	1.Scanning files line by line
	2.Splitting each input line into fields
	3.Comparing input lines and fields to patterns
	
Performing specified actions on matching lines
 1.AWK Command Usefulness
 2.Changing data files
 3.Producing formatted reports
 4.Programming Concepts for awk command
 5.Format output lines
 6.Conditional and loops
 7.Arithmetic and string operations

AWK Syntax

$ awk options 'selection _criteria {action }' input-file > output-file

To demonstrate more about AWK usage, we are going to use the text file called file.txtawk command example file1st column => Item, 2nd column => Model 3rd column => Country 4th column => Cost

Awk Command Examples

Printing specific columns

1.To print the 2nd and 3rd columns, execute the command below.

	$ awk '{print $2 "\t" $3}' file.txt


2.Printing all lines in a file


	$ awk ' {print $0}' file.txt


3.Printing all lines that match a specific pattern
      if you want to print lines that match a certain pattern, the syntax is as shown

syntax 
   
	$ awk '/variable_to_be_matched/ {print $0}' file.txt

ex.1 :
For instance, to match all entries with the letter ‘o’, the syntax will be

$ awk '/o/ {print $0}' file.txt

ex.2

Outputawk linux command matching all linesTo match all entries with the letter ‘e’

$ awk '/e/ {print $0}' file.txt
OutputAwk Matching Lines With E

Printing columns that match a specific pattern

When AWK locates a pattern match, the command will execute the whole record. You can change the default by issuing an instruction to display only certain fields. For example:

$ awk '/a/ {print $3 "\t" $4}' file.txt

The above command prints the 3rd and 4th columns where the letter ‘a’ appears in either of the columns OutputAwk Matching Column 

ex.  Counting and Printing Matched Pattern

You can use AWK to count and print the number of lines for every pattern match. For example, the command below counts the number of instances a matching pattern appears

$ awk '/a/{++cnt} END {print "Count = ", cnt}' file.txt
OutputCount Columns Matching a pattern

ex.Print Lines with More or less than a No. of Characters

	AWK has a built-in length function that returns the length of the string. From the command $0 variable stores the entire line and in the absence of a body block, the default action is taken, i.e., the print action. Therefore, in our text file, if a line has more than 18 characters, then the comparison results true, and the line is printed as shown below.

$ awk 'length($0) > 20' file.txt


ex.	Saving output of AWK to a different file

	If you wish to save the output of your results, use the > redirection operator. For example

$ awk '/a/ {print $3 "\t" $4}' file.txt > Output.txt
 You can verify the results using the cat command as shown below

$ cat output.txt
 OutputAwk Redirect Output

